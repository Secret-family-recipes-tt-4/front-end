
[{"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\index.js":"1","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\App.js":"2","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\store\\reducer.js":"3","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Login.js":"4","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Home.js":"5","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\New.js":"6","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Header.js":"7","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Sign.js":"8","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\store\\actions.js":"9","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\utils\\axiosWithAuth.js":"10","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\UserPage.js":"11","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\PrivateRoute.js":"12","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\Recipes.js":"13","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\Recipe.js":"14"},{"size":722,"mtime":1612469733283,"results":"15","hashOfConfig":"16"},{"size":1387,"mtime":1612397415508,"results":"17","hashOfConfig":"16"},{"size":1561,"mtime":1612375737209,"results":"18","hashOfConfig":"16"},{"size":3336,"mtime":1612422784920,"results":"19","hashOfConfig":"16"},{"size":3733,"mtime":1612469613293,"results":"20","hashOfConfig":"16"},{"size":6908,"mtime":1612469733281,"results":"21","hashOfConfig":"16"},{"size":2037,"mtime":1612421263323,"results":"22","hashOfConfig":"16"},{"size":2953,"mtime":1612375737204,"results":"23","hashOfConfig":"16"},{"size":2060,"mtime":1612469733283,"results":"24","hashOfConfig":"16"},{"size":293,"mtime":1612374260447,"results":"25","hashOfConfig":"16"},{"size":2792,"mtime":1612469733301,"results":"26","hashOfConfig":"16"},{"size":512,"mtime":1612374260434,"results":"27","hashOfConfig":"16"},{"size":336,"mtime":1612375737206,"results":"28","hashOfConfig":"16"},{"size":3448,"mtime":1612469733282,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"z7miit",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\index.js",[],["64","65"],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\App.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\store\\reducer.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Login.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Home.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\New.js",["66","67"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { submitRecipe, loadRecipes } from \"./store/actions\";\r\n\r\nfunction New(props) {\r\n    const [recipeData, setRecipeData] = useState({\r\n        title: \"\", // string, required\r\n        source: \"\", // string, optional\r\n        ingredients: \"\", // text, required\r\n        instructions: \"\", // text, required\r\n        notes: \"\", // text, optional\r\n        categories: [1], // array of category ids*, optional\r\n    });\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        setRecipeData({\r\n            ...recipeData,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleSubmitNewRecipe = (e) => {\r\n        e.preventDefault();\r\n        //dispatch and action to the reducer\r\n        props.submitRecipe(recipeData);\r\n        //!!! IMPORTANT !!!\r\n        //submit recipe doesn`t change isloading to True because API doesnt return submitted recipe.\r\n        //when SUBMIT_RECIPE called, LOAD_RECIPES must be called afterwards.\r\n        props.loadRecipes();\r\n        history.push(\"/User-page\");\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>This is my New page</h1>\r\n            <Form>\r\n                <Form.Group className=\"form-group\">\r\n                    <Form.Label>Recipe Name: </Form.Label>\r\n                    <Form.Control\r\n                        name=\"title\"\r\n                        value={recipeData.title}\r\n                        onChange={handleChange}\r\n                        type=\"Recipe Name\"\r\n                        placeholder=\"Recipe Name\"\r\n                    />\r\n                    <Form.Text className=\"text-muted\"></Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"form-group\">\r\n                    <Form.Label>Recipe Source: </Form.Label>\r\n                    <Form.Control\r\n                        name=\"source\"\r\n                        value={recipeData.source}\r\n                        onChange={handleChange}\r\n                        type=\"name\"\r\n                        placeholder=\"Source\"\r\n                    />\r\n                    <Form.Text className=\"text-muted\"></Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\">\r\n                        Ingredients:{\" \"}\r\n                    </label>\r\n                    <textarea\r\n                        name=\"ingredients\"\r\n                        value={recipeData.ingredients}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"5\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\">\r\n                        Instructions:{\" \"}\r\n                    </label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        name=\"instructions\"\r\n                        value={recipeData.instructions}\r\n                        onChange={handleChange}\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"5\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\">Notes: </label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        name=\"notes\"\r\n                        value={recipeData.notes}\r\n                        onChange={handleChange}\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"5\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <div className=\"dropdown\">\r\n                    <button\r\n                        className=\"btn btn-secondary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        id=\"dropdownMenuButton\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                    >\r\n                        Categories\r\n                    </button>\r\n                    <div\r\n                        className=\"dropdown-menu\"\r\n                        name=\"category\"\r\n                        aria-labelledby=\"dropdownMenuButton\"\r\n                    >\r\n                        <p className=\"dropdown-item\" value={1}>\r\n                            Breakfast\r\n                        </p>\r\n                        <p className=\"dropdown-item\" value={2}>\r\n                            Lunch\r\n                        </p>\r\n                        <p className=\"dropdown-item\" value={3}>\r\n                            Dinner\r\n                        </p>\r\n                        <p className=\"dropdown-item\" value={4}>\r\n                            Dessert\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-success\"\r\n                    type=\"submit\"\r\n                    onClick={handleSubmitNewRecipe}\r\n                >\r\n                    Submit Recipe\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps(), { submitRecipe, loadRecipes })(New);\r\n","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Header.js",["68"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n\r\n  const handleSignout = (e) => {\r\n    localStorage.clear(\"token\");\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg fixed top\">\r\n        <div>\r\n         <img src=\"https://i.ibb.co/pXZvgHd/cutlery-1.png\"/>\r\n     </div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarCollapse\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse d-flex justify-content-between\" id=\"navbarCollapse\">\r\n          <ul className=\"navbar-nav ml-left\">\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/Login\" className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\" onClick={handleSignout}>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n           \r\n            {localStorage.getItem(\"token\") && (\r\n              <li className=\"navbar-item\">\r\n                <Link to=\"/User-page\" className=\"nav-link\">\r\n                  User page\r\n                </Link>\r\n              </li>\r\n            )}\r\n            {localStorage.getItem(\"token\") && (\r\n              <li className=\"navbar-item\">\r\n                <Link to=\"/New\" className=\"nav-link\">\r\n                  New Recipes\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <div className=\"grandma\">\r\n              <h1>Secret Family Recipes</h1>\r\n            </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\Sign.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\store\\actions.js",["69"],"import { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\n\r\nexport const AXIOS_START = \"AXIOS_START\";\r\nexport const AXIOS_FAIL = \"AXIOS_FAIL\";\r\nexport const LOAD_RECIPES_SUCCESS = \"LOAD_RECIPES_SUCCESS\";\r\nexport const SUBMIT_RECIPE_SUCCESS = \"SUBMIT_RECIPE_SUCCESS\";\r\nexport const EDIT_RECIPE_SUCCESS = \"EDIT_RECIPE_SUCCESS\";\r\nexport const DELETE_RECIPE_SUCCESS = \"DELETE_RECIPE_SUCCESS\";\r\n\r\nexport const loadRecipes = () => (dispatch) => {\r\n    dispatch({ type: AXIOS_START });\r\n    axiosWithAuth()\r\n        .get(\"/recipes\")\r\n        .then((response) => {\r\n            console.log(\"dis\", response.data);\r\n            dispatch({ type: LOAD_RECIPES_SUCCESS, payload: response.data });\r\n        })\r\n        .catch((error) => dispatch({ type: AXIOS_FAIL, payload: error.data }));\r\n};\r\n\r\nexport const submitRecipe = (recipe) => (dispatch) => {\r\n    // doesnt need id\r\n    dispatch({ type: AXIOS_START });\r\n    axiosWithAuth()\r\n        .post(\"/recipes\", recipe)\r\n        .then((response) => {\r\n            //loadRecipes();\r\n            dispatch({ type: SUBMIT_RECIPE_SUCCESS });\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: AXIOS_FAIL, payload: error.data });\r\n        });\r\n};\r\n\r\nexport const editRecipe = (recipe) => (dispatch) => {\r\n    // needs id\r\n    dispatch({ type: AXIOS_START });\r\n\r\n    axiosWithAuth()\r\n        .put(`/recipes${recipe.id}`, recipe)\r\n        .then((response) => {\r\n            dispatch({\r\n                type: EDIT_RECIPE_SUCCESS,\r\n                payload: response.data.recipe[0],\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: AXIOS_FAIL, payload: error.data });\r\n        });\r\n};\r\n\r\nexport const deleteRecipe = (recipeID) => (dispatch) => {\r\n    dispatch({ type: AXIOS_START });\r\n\r\n    axiosWithAuth()\r\n        .delete(`recipes/${recipeID}`)\r\n        .then((response) => {\r\n            dispatch({ type: DELETE_RECIPE_SUCCESS, payload: recipeID });\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: AXIOS_FAIL, payload: error.data });\r\n        });\r\n};\r\n","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\UserPage.js",["70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadRecipes } from \"../store/actions\";\r\nimport Recipes from \"./Recipes\";\r\n\r\nconst UserPage = (props) => {\r\n    const [filteredRecipes, setFilteredRecipes] = useState(props.recipes);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    useEffect(() => {\r\n        props.loadRecipes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredRecipes(props.recipes);\r\n        setSearchWord(\"\");\r\n    }, [props.recipes]);\r\n\r\n    useEffect(() => {\r\n        if (searchWord.length >= 3) {\r\n            const filtered = props.recipes.filter((recipe) => {\r\n                if (\r\n                    recipe.title.toLowerCase().includes(searchWord) ||\r\n                    recipe.categories.toLowerCase().includes(searchWord)\r\n                ) {\r\n                    return recipe;\r\n                }\r\n                return null;\r\n            });\r\n            setFilteredRecipes(filtered);\r\n        } else {\r\n            setFilteredRecipes(props.recipes);\r\n        }\r\n    }, [props.recipes, searchWord]);\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchWord(e.target.value);\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        if (searchWord.length >= 3) {\r\n            const filtered = props.recipes.filter((recipe) => {\r\n                if (\r\n                    recipe.title.toLowerCase().includes(searchWord) ||\r\n                    recipe.categories.toLowerCase().includes(searchWord)\r\n                ) {\r\n                    return recipe;\r\n                }\r\n                return null;\r\n            });\r\n            setFilteredRecipes(filtered);\r\n        } else {\r\n            setFilteredRecipes(props.recipes);\r\n        }\r\n    };\r\n\r\n    if (props.isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <h1>Hello, user!</h1>\r\n            <form className=\"d-flex\">\r\n                <input\r\n                    className=\"form-control me-2\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    name=\"search\"\r\n                    value={searchWord}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"search by title or category\"\r\n                />\r\n                <button\r\n                    className=\"btn btn-success\"\r\n                    type=\"submit\"\r\n                    onClick={handleSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </form>\r\n            <Recipes recipes={filteredRecipes} />\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\nexport default connect(mapStateToProps, { loadRecipes })(UserPage);\r\n","C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\PrivateRoute.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\Recipes.js",[],"C:\\Users\\tasni\\desktop\\front-end\\front-end\\src\\components\\Recipe.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"78","severity":1,"message":"82","line":19,"column":11,"nodeType":"80","messageId":"81","endLine":19,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":19,"column":10,"nodeType":"85","endLine":19,"endColumn":61},{"ruleId":"78","severity":1,"message":"86","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":12,"column":8,"nodeType":"89","endLine":12,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":75,"column":21,"nodeType":"93","endLine":75,"endColumn":62},{"ruleId":"74","replacedBy":"94"},{"ruleId":"76","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["98"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [props]",{"range":"101","text":"102"},[402,404],"[props]"]

